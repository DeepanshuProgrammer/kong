version: '2.1'

x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-off}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: db
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kongpassword}
  KONG_ANONYMOUS_REPORTS: "false"

services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-13}
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong_tests}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kongpassword}
    ports:
      - '5432:5432'
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: on-failure
  kong:
    image: ${KONG_DOCKER_IMAGE:-kong:latest}
    privileged: true
    network_mode: host
    container_name: kong
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/kong
    environment:
      <<: *kong-env
      JOBS: 2
      KONG_TEST_DATABASE: ${TEST_DATABASE:-postgres}
      KONG_TEST_PG_DATABASE: ${KONG_PG_DATABASE:-kong_tests}
      KONG_TEST_PG_PASSWORD: ${KONG_PG_PASSWORD:-kongpassword}
      KONG_CASSANDRA_CONTACT_POINTS: 127.0.0.1
      KONG_TEST_CASSANDRA_CONTACT_POINTS: 127.0.0.1
      KONG_TEST_PG_HOST: 127.0.0.1
      KONG_PATH: /kong
      KONG_TEST_PATH: /kong
      KONG_TEST_PG_USER: ${KONG_PG_USER:-kong}
      KONG_REDIS_HOST: 127.0.0.1
      KONG_SPEC_REDIS_HOST: 127.0.0.1
      KONG_TEST_NGINX_USER: root
    stdin_open: true
    tty: true
    restart: on-failure